D G "__PCM__" 0 0 ""4.130""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""14-Oct-13""
D G "__TIME__" 0 0 ""12:46:26""
D G "__DEBUG" 0 0 "1"
D G "__16F628A" 0 0 "TRUE" "Standard Header file for the PIC16F628A device ////////////////"
d G "PIN_A0" 1 19 "40"
d G "PIN_A1" 1 20 "41"
d G "PIN_A2" 1 21 "42"
d G "PIN_A3" 1 22 "43"
d G "PIN_A4" 1 23 "44"
d G "PIN_A5" 1 24 "45"
d G "PIN_A6" 1 25 "46"
d G "PIN_A7" 1 26 "47"
d G "PIN_B0" 1 28 "48"
d G "PIN_B1" 1 29 "49"
d G "PIN_B2" 1 30 "50"
d G "PIN_B3" 1 31 "51"
d G "PIN_B4" 1 32 "52"
d G "PIN_B5" 1 33 "53"
d G "PIN_B6" 1 34 "54"
d G "PIN_B7" 1 35 "55"
d G "FALSE" 1 38 "0"
d G "TRUE" 1 39 "1"
d G "BYTE" 1 41 "int8"
d G "BOOLEAN" 1 42 "int1"
d G "getc" 1 44 "getch"
d G "fgetc" 1 45 "getch"
d G "getchar" 1 46 "getch"
d G "putc" 1 47 "putchar"
d G "fputc" 1 48 "putchar"
d G "fgets" 1 49 "gets"
d G "fputs" 1 50 "puts"
d G "WDT_FROM_SLEEP" 1 55 "3"
d G "WDT_TIMEOUT" 1 56 "11"
d G "MCLR_FROM_SLEEP" 1 57 "19"
d G "MCLR_FROM_RUN" 1 58 "27"
d G "NORMAL_POWER_UP" 1 59 "25"
d G "BROWNOUT_RESTART" 1 60 "26"
d G "T0_INTERNAL" 1 67 "0"
d G "T0_EXT_L_TO_H" 1 68 "32"
d G "T0_EXT_H_TO_L" 1 69 "48"
d G "T0_DIV_1" 1 71 "8"
d G "T0_DIV_2" 1 72 "0"
d G "T0_DIV_4" 1 73 "1"
d G "T0_DIV_8" 1 74 "2"
d G "T0_DIV_16" 1 75 "3"
d G "T0_DIV_32" 1 76 "4"
d G "T0_DIV_64" 1 77 "5"
d G "T0_DIV_128" 1 78 "6"
d G "T0_DIV_256" 1 79 "7"
d G "T0_8_BIT" 1 82 "0"
d G "RTCC_INTERNAL" 1 84 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 85 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 86 "48"
d G "RTCC_DIV_1" 1 87 "8"
d G "RTCC_DIV_2" 1 88 "0"
d G "RTCC_DIV_4" 1 89 "1"
d G "RTCC_DIV_8" 1 90 "2"
d G "RTCC_DIV_16" 1 91 "3"
d G "RTCC_DIV_32" 1 92 "4"
d G "RTCC_DIV_64" 1 93 "5"
d G "RTCC_DIV_128" 1 94 "6"
d G "RTCC_DIV_256" 1 95 "7"
d G "RTCC_8_BIT" 1 96 "0"
d G "WDT_18MS" 1 108 "8"
d G "WDT_36MS" 1 109 "9"
d G "WDT_72MS" 1 110 "10"
d G "WDT_144MS" 1 111 "11"
d G "WDT_288MS" 1 112 "12"
d G "WDT_576MS" 1 113 "13"
d G "WDT_1152MS" 1 114 "14"
d G "WDT_2304MS" 1 115 "15"
d G "T1_DISABLED" 1 121 "0"
d G "T1_INTERNAL" 1 122 "0x85"
d G "T1_EXTERNAL" 1 123 "0x87"
d G "T1_EXTERNAL_SYNC" 1 124 "0x83"
d G "T1_CLK_OUT" 1 126 "8"
d G "T1_DIV_BY_1" 1 128 "0"
d G "T1_DIV_BY_2" 1 129 "0x10"
d G "T1_DIV_BY_4" 1 130 "0x20"
d G "T1_DIV_BY_8" 1 131 "0x30"
d G "T2_DISABLED" 1 136 "0"
d G "T2_DIV_BY_1" 1 137 "4"
d G "T2_DIV_BY_4" 1 138 "5"
d G "T2_DIV_BY_16" 1 139 "6"
d G "CCP_OFF" 1 145 "0"
d G "CCP_CAPTURE_FE" 1 146 "4"
d G "CCP_CAPTURE_RE" 1 147 "5"
d G "CCP_CAPTURE_DIV_4" 1 148 "6"
d G "CCP_CAPTURE_DIV_16" 1 149 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 150 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 151 "9"
d G "CCP_COMPARE_INT" 1 152 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 1 153 "0xB"
d G "CCP_PWM" 1 154 "0xC"
d G "CCP_PWM_PLUS_1" 1 155 "0x1c"
d G "CCP_PWM_PLUS_2" 1 156 "0x2c"
d G "CCP_PWM_PLUS_3" 1 157 "0x3c"
d G "UART_ADDRESS" 1 165 "2"
d G "UART_DATA" 1 166 "4"
d G "A0_A3_A1_A2" 1 170 "0xfff04"
d G "A0_A2_A1_A2" 1 171 "0x7ff03"
d G "NC_NC_A1_A2" 1 172 "0x6ff05"
d G "NC_NC_NC_NC" 1 173 "0x0ff07"
d G "A0_VR_A1_VR" 1 174 "0x3ff02"
d G "A3_VR_A2_VR" 1 175 "0xcff0A"
d G "A0_A2_A1_A2_OUT_ON_A3_A4" 1 176 "0x7e706"
d G "A3_A2_A1_A2" 1 177 "0xeff09"
d G "CP1_INVERT" 1 178 "0x00010"
d G "CP2_INVERT" 1 179 "0x00020"
d G "VREF_LOW" 1 187 "0xa0"
d G "VREF_HIGH" 1 188 "0x80"
d G "VREF_A2" 1 190 "0x40"
d G "OSC_48KHZ" 1 194 "0"
d G "OSC_4MHZ" 1 195 "8"
d G "L_TO_H" 1 203 "0x40"
d G "H_TO_L" 1 204 "0"
d G "GLOBAL" 1 206 "0x0BC0"
d G "PERIPH" 1 207 "0x0B40"
d G "INT_RTCC" 1 208 "0x000B20"
d G "INT_RB" 1 209 "0x00FF0B08"
d G "INT_EXT_L2H" 1 210 "0x50000B10"
d G "INT_EXT_H2L" 1 211 "0x60000B10"
d G "INT_EXT" 1 212 "0x000B10"
d G "INT_TBE" 1 213 "0x008C10"
d G "INT_RDA" 1 214 "0x008C20"
d G "INT_TIMER1" 1 215 "0x008C01"
d G "INT_TIMER2" 1 216 "0x008C02"
d G "INT_CCP1" 1 217 "0x008C04"
d G "INT_COMP" 1 218 "0x008C40"
d G "INT_TIMER0" 1 219 "0x000B20"
d G "INT_EEPROM" 1 220 "0x008C80"
D G "LED" 2 11 "PIN_A1"
D G "DELAY" 2 12 "500"
D G "SPI_ENABLE" 2 17 "PIN_B6"
D G "DPOT_SCLK" 2 18 "PIN_B5"
D G "DPOT_MOSI" 2 19 "PIN_B4"
D G "DPOT_COMMAND" 2 21 "0x11" "Specific to Microchip MCP41010"
D G "POT_MAX" 2 23 "255"
D G "POT_MIN" 2 24 "0"
D G "VERSION_MAJOR" 2 27 "2"
D G "VERSION_MINOR" 2 28 "0"
V G "VOL_MUTE" 2 33 "int8"
V G "VOL_MIN" 2 34 "int8"
V G "VOL_MAX" 2 35 "int8"
V G "VOL_BIG_STEP" 2 36 "int8"
V G "VOL_SMALL_STEP" 2 37 "int8"
V G "command_data" 2 38 "sint8"
D G "COMMAND_START_BYTE" 2 43 "0x02" "ASCII Start of Text"
D G "COMMAND_END_BYTE" 2 44 "0x03" "ASCII End of text"
D G "VOL_START_BYTE" 2 46 "0x76"
D G "VOL_UP_BYTE" 2 47 "0x75"
D G "VOL_UP_BYTE_SMALL" 2 48 "0x74"
D G "VOL_DOWN_BYTE" 2 49 "0x64"
D G "VOL_DOWN_BYTE_SMALL" 2 50 "0x63"
D G "VOL_DISCRETE_START" 2 51 "0x56"
D G "MUTE_START_BYTE" 2 53 "0x6D"
D G "MUTE_TOGGLE_BYTE" 2 54 "0x4D"
D G "MUTE_FORCEMUTE_BYTE" 2 55 "0x79"
D G "MUTE_FORCEUNMUTE_BYTE" 2 56 "0x6E"
D G "DEBUG_START_BYTE" 2 58 "0x44"
D G "DEBUG_GET_VERSION" 2 59 "0x56"
D G "STATUS_BYTE" 2 61 "0x53" "S (sent after VOL_START_BYTE or MUTE_START_BYTE)"
D G "COMMAND_MAX_LENGTH" 2 63 "4" "INCLUDING END_BYTE"
D G "COMMAND_VOL_UP" 2 67 "0x01"
D G "COMMAND_VOL_DOWN" 2 68 "0x02"
D G "COMMAND_VOL_DISCRETE" 2 69 "0x03"
D G "COMMAND_VOL_STATUS" 2 70 "0x04"
D G "COMMAND_MUTE_TOGGLE" 2 72 "0x05"
D G "COMMAND_FORCE_MUTE" 2 73 "0x06"
D G "COMMAND_FORCE_UNMUTE" 2 74 "0x07"
D G "COMMAND_MUTE_STATUS" 2 75 "0x08"
D G "COMMAND_GET_VERSION" 2 77 "0x09"
D G "DEBUG" 2 82 "0"
D G "DEBUG_IR" 2 83 "0"
D G "IR_INPUT" 2 88 "PIN_B0" "Pin IR received connected to (must be an interrupt)"
D G "IR_STATUS" 2 89 " (!input(IR_INPUT))" "Invert the signal from the IR receiver"
V G "current_volume" 2 91 "int8"
V G "current_pot_setting" 2 92 "int8"
V G "muted_volume" 2 93 "sint8"
V G "is_muted" 2 94 "int8"
V G "startup_flag" 2 95 "int8"
V G "is_small_step" 2 96 "int8"
F G "get_IR_command" 2 97 "int8()"
F G "get_serial_command" 2 98 "int8()"
T G "IR_struct" 2 104 "{int8 address,int8 command,int8 state}"
V G "IR" 2 106 "IR_struct"
V L "data" 3 2 "int8"
F G "set_digital_pot" 3 2 "void(int8 data)" "Software SPI implementation *"
V L "i" 3 6 "int8"
V L "cmd" 3 7 "int8[2]"
C L "set_digital_pot" 3 9 1 "FUNCTION"
C L "set_digital_pot" 3 9 1 "FUNCTION"
C L "set_digital_pot" 3 9 1 "FUNCTION"
C L "set_digital_pot" 3 9 1 "FUNCTION"
C L "set_digital_pot" 3 9 1 "FUNCTION"
C L "set_digital_pot" 3 9 1 "FUNCTION"
F G "volume_to_nearest_five" 3 32 "int8()"
V L "return_int" 3 34 "int8"
F G "saveAndSetVol" 3 87 "void()"
V L "log_index" 3 89 "int8"
V L "eeprom_volume" 3 90 "int8"
V L "eeprom_mute" 3 91 "int8"
C L "saveAndSetVol" 3 9 5 "FUNCTION"
V L "shaped_pot_values" 3 100 "int8[21]"
C L "saveAndSetVol" 3 9 1 "FUNCTION"
C L "saveAndSetVol" 3 9 1 "FUNCTION"
V L "x" 3 110 "int8"
C L "saveAndSetVol" 3 9 1 "FUNCTION"
C L "saveAndSetVol" 3 9 2 "FUNCTION"
C L "saveAndSetVol" 3 9 1 "FUNCTION"
C L "saveAndSetVol" 3 9 1 "FUNCTION"
F G "vol_discrete" 3 150 "void()" "ADD A CHECK HERE BUT IT IS CURRENTLY DONE IN RS232.c"
F G "vol_up" 3 159 "void()"
F G "vol_down" 3 184 "void()"
F G "mute_forcemute" 3 210 "void()"
C L "mute_forcemute" 3 9 1 "FUNCTION"
C L "mute_forcemute" 3 9 1 "FUNCTION"
F G "mute_forceunmute" 3 222 "void()"
C L "mute_forceunmute" 3 9 1 "FUNCTION"
C L "mute_forceunmute" 3 9 1 "FUNCTION"
F G "mute_toggle" 3 233 "void()"
C L "mute_toggle" 3 9 1 "FUNCTION"
C L "mute_toggle" 3 9 1 "FUNCTION"
F G "get_RC5_command" 4 1 "int8()"
V L "tmp" 4 4 "int16"
V L "t" 4 4 "int16"
V L "i" 4 5 "int8"
V L "inp" 4 6 "int8"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 2 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
C L "get_RC5_command" 4 9 1 "FUNCTION"
V G "timeout_error" 5 1 "int8"
F G "timed_getc" 5 3 "int8()"
V L "timeout" 5 5 "int16"
C L "timed_getc" 5 10 1 "FUNCTION"
C L "timed_getc" 5 10 1 "FUNCTION"
F G "get_serial_command" 5 23 "int8()"
V L "valid_command" 5 24 "int8"
V L "is_error" 5 25 "int8"
V L "command_char" 5 26 "int8"
V L "data_char1" 5 27 "int8"
V L "end_char" 5 28 "int8"
V L "start_char" 5 30 "int8"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
V L "new_volume" 5 86 "int8"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "get_serial_command" 5 10 1 "FUNCTION"
C L "EXT_isr" 0 7 1 "FUNCTION"
F G "EXT_isr" 0 9 "void()"
F G "MAIN" 0 15 "void()"
V L "rs232_command" 0 17 "int8"
V L "eeprom_volume" 0 17 "int8"
V L "eeprom_mute" 0 17 "int8"
C L "MAIN" 0 32 1 "*"
C L "MAIN" 0 32 2 "FUNCTION"
C L "MAIN" 0 52 1 "*"
C L "MAIN" 0 52 1 "FUNCTION"
C L "MAIN" 0 52 1 "FUNCTION"
C L "MAIN" 0 52 1 "FUNCTION"
C L "MAIN" 0 52 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_oscillator" 0 2
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
